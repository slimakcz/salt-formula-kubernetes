{%- from "kubernetes/map.jinja" import common with context -%}
{%- from "kubernetes/map.jinja" import master with context -%}
# This manifest deploys the Calico Kubernetes controllers.
# See https://github.com/projectcalico/kube-controllers
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: calico-kube-controllers
  namespace: {{ common.addons.calico_policy.namespace }}
  labels:
    k8s-app: calico-kube-controllers
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  # The controllers can only have a single active instance.
  replicas: 1
  selector:
    matchLabels:
      k8s-app: calico-kube-controllers
  strategy:
    type: Recreate
  template:
    metadata:
      name: calico-kube-controllers
      namespace: {{ common.addons.calico_policy.namespace }}
      labels:
        k8s-app: calico-kube-controllers
      annotations:
        # Mark this pod as a critical add-on; when enabled, the critical add-on scheduler
        # reserves resources for critical add-on pods so that they can be rescheduled after
        # a failure. This annotation works in tandem with the toleration below.
        # Note. Rescheduler is deprecated in k8s v1.10 and is to be removed in k8s v1.11.
        scheduler.alpha.kubernetes.io/critical-pod: ''
{%- if common.addons.calico_policy.cni is defined %}
        cni: {{ common.addons.calico_policy.cni }}
{%- endif %}
    spec:
      # The controllers must run in the host network namespace so that
      # it isn't governed by policy that would prevent it from working.
      hostNetwork: true
      tolerations:
      # this taint is set by all kubelets running `--cloud-provider=external`
      # so we should tolerate it to schedule the calico pods
      - key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      # Allow this pod to be rescheduled while the node is in "critical add-ons only" mode.
      # This, along with the annotation above marks this pod as a critical add-on.
      # Note. Rescheduler is deprecated in k8s v1.10 and is to be removed in k8s v1.11.
      - key: CriticalAddonsOnly
        operator: Exists
      serviceAccountName: calico-kube-controllers
      containers:
        - name: calico-kube-controllers
          image: {{ common.addons.calico_policy.image }}
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 100m
              memory: 256M
            requests:
              cpu: 30m
              memory: 64M
          env:
            # The list of etcd nodes in the cluster.
            - name: ETCD_ENDPOINTS
              value: "{% for member in master.network.calico.etcd.members %}http{% if master.network.calico.etcd.get('ssl', {}).get('enabled') %}s{% endif %}://{{ member.host }}:{{ member.port }}{% if not loop.last %},{% endif %}{% endfor %}"
            # CA certificate, client certificate, client key files for accessing the etcd cluster.
            - name: ETCD_CA_CERT_FILE
              value: "/var/lib/etcd/ca.pem"
            - name: ETCD_CERT_FILE
              value: "/var/lib/etcd/etcd-client.pem"
            - name: ETCD_KEY_FILE
              value: "/var/lib/etcd/etcd-client.pem"
            # Which controllers to run.
            - name: ENABLED_CONTROLLERS
              value: "policy,profile,workloadendpoint,node"
            # Minimum log level to be displayed.
            - name: LOG_LEVEL
              value: "info"
            # Period to perform reconciliation with the Calico datastore. Default is 5m.
            - name: RECONCILER_PERIOD
              value: "1m"
          volumeMounts:
          - mountPath: /var/lib/etcd/
            name: etcd-certs
            readOnly: true
      volumes:
      - hostPath:
          path: /var/lib/etcd
        name: etcd-certs

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: calico-kube-controllers
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: calico-kube-controllers
subjects:
- kind: ServiceAccount
  name: calico-kube-controllers
  namespace: {{ common.addons.calico_policy.namespace }}

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: calico-kube-controllers
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
rules:
  - apiGroups:
    - ""
    - extensions
    resources:
      - pods
      - namespaces
      - networkpolicies
      - nodes
    verbs:
      - watch
      - list
  - apiGroups:
    - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - watch
      - list

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-kube-controllers
  namespace: {{ common.addons.calico_policy.namespace }}
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
